@using EMIM.ViewModel
@model StoreProfileViewModel

@{
    Layout = "~/Views/Shared/_StoreLayout.cshtml";
}


<main class="w-full h-full flex flex-col justify-center items-center">
  
  <section class="w-full max-w-4xl h-auto md:h-[350px] shadow-2xl flex flex-col md:flex-row rounded-2xl mt-8 p-4">
    <!--imagen -->
    <section class="flex items-center justify-center w-full md:w-1/2">
      <div class="store-profile-picture">
        <img src="@Url.Content(Model.Store.GetProfilePictureUrl())" alt="Foto de Perfil de @Model.Store.Name"
          class="w-[200px] h-[200px] md:w-[250px] md:h-[250px] lg:w-[350px] lg:h-[350px] rounded-full"
          onerror="this.src='@Url.Content("~/images/default-store-profile.png")'" />
      </div>
    </section>

    <!-- Sección del texto -->
    <div class="text-gray-800 text-sm font-medium px-4 py-3 flex flex-col justify-center w-full md:w-2/3">
      <!-- Botones -->
      <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-4">
        <a class="bg-blue-200 text-black font-medium text-sm px-4 py-1 rounded-full shadow-md hover:bg-blue-300 mb-2 md:mb-0">
          @Model.Products.Count productos publicados
        </a>        
      </div>

      <h1 class="font-bold text-lg text-center md:text-left">@Model.Store.Name</h1>
      <hr class="border-t border-gray-400 my-2">
      <p class="text-base text-center md:text-left">@Model.Store.Description</p>
      <hr class="border-t border-gray-400 my-2">


      <!-- Rating -->
      <label class="self-center mt-[20px]">
        <input type="checkbox" checked="" class="peer hidden" />
        <div
          class="group flex w-fit cursor-pointer items-center gap-2 overflow-hidden rounded-full border border-amber-500 fill-none p-2 px-3 font-extrabold text-amber-500 transition-all peer-checked:fill-amber-500 peer-checked:hover:text-white active:scale-90">
          <div class="z-10 transition group-hover:translate-x-4">RECOMENDADO</div>
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
            class="size-6 transition duration-500 group-hover:scale-[1500%] group-hover:-translate-x-10">
            <path
              d="M11.48 3.499a.562.562 0 0 1 1.04 0l2.125 5.111a.563.563 0 0 0 .475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 0 0-.182.557l1.285 5.385a.562.562 0 0 1-.84.61l-4.725-2.885a.562.562 0 0 0-.586 0L6.982 20.54a.562.562 0 0 1-.84-.61l1.285-5.386a.562.562 0 0 0-.182-.557l-4.204-3.602a.562.562 0 0 1 .321-.988l5.518-.442a.563.563 0 0 0 .475-.345L11.48 3.5Z"
              stroke-linejoin="round" stroke-linecap="round"></path>
          </svg>
        </div>
      </label>
    </div>

    <!-- enlace de edición -->
    <a class="flex justify-center items-center mt-4 md:mt-[-300px]" asp-controller="Store" asp-action="EditStore" asp-route-id="@Model.Store.Id">
      <img src="~/images/edit.png" alt="edit" class="w-6 h-6">
    </a>
  </section>

  <!-- Contenedor de productos -->
  <div class="flex justify-between items-center px-4 md:px-8 lg:px-16 mt-8">
    <h1 class="font-bold text-lg text-center">Productos</h1>

    <button id="redirectButton" class="group cursor-pointer outline-none hover:rotate-90 duration-300" title="Add New">
      <svg
        class="stroke-teal-500 fill-none group-hover:fill-teal-800 group-active:stroke-teal-200 group-active:fill-teal-600 group-active:duration-0 duration-300"
        viewBox="0 0 24 24" height="50px" width="50px" xmlns="http://www.w3.org/2000/svg">
        <path stroke-width="1.5"
          d="M12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22Z"></path>
        <path stroke-width="1.5" d="M8 12H16"></path>
        <path stroke-width="1.5" d="M12 16V8"></path>
      </svg>
    </button>
  </div>

  <script>
    document.getElementById("redirectButton").addEventListener("click", function () {
      window.location.href = "@Url.Action("NewProduct", "Product")";
    });
  </script>

  <hr class="border-t border-gray-400 my-2 w-11/12 max-w-4xl">

  <!-- Cartas de Productos -->
  <section class="grid flex-col sm:flex-col-2 lg:flex-col-3 gap-6 p-4 max-w-6xl w-full">
    @await Component.InvokeAsync("ProductCard", new { storeId = Model.Store.Id })
  </section>
</main>