@{
    ViewData["Title"] = "Home Page";

}


<div class="w-[99%] h-[1200px] bg-[#eef1f3] mt-12 flex">
    <!--SIDEBAR-->
    <aside class="hidden w-[15%] h-full md:flex justify-center items-center">
        <div class="w-[95%] h-2/3 bg-[#d0e2e4] rounded-md flex flex-col items-center">
            <h1 class="text-2xl font-bold" style="margin:10px 0">Categorías</h1>
            <ul class="space-y-2" style="width:90%;">
                <li class="bg-[#A9C8CF] rounded-md w-[80%] my-[5px]">
                    <button class="category-filter" data-category-id="0" data-category-name="todos">
                        Todos
                    </button>
                </li>
                    @await Component.InvokeAsync("CategoryOption")
            </ul>
        </div>
    </aside>

    <div class="w-full md:w-[85%] h-full p-4">
       
        
        <h1 class="text-2xl font-bold">Destacados</h1>

        <!-- Carousel Section -->
        <div class="w-full h-[20%] md:h-[30%] mb-4 flex justify-center items-center">

            <div class="swiper">
                <!-- Additional required wrapper -->
                <div class="swiper-wrapper">
                    <!-- Slides -->
                    @await Component.InvokeAsync("CarouselCard")

                </div>

                <!-- If we need navigation buttons -->
                <div class="swiper-button-prev"></div>
                <div class="swiper-button-next"></div>

            </div>



        </div>


        <!-- Filter Section -->
        <div class="">
            <p class="w-[100px] h-[40px] bg-[#d0e2e4] rounded-md flex items-center justify-center">
                Mostrar por:
            </p>
        </div>


        <h1 id="category-title" class="text-2xl font-bold" style="margin-left: 15px">
            Todos los productos
        </h1>



        <div class="products-container" id="products-container">
            @await Component.InvokeAsync("ProductCard")
        </div>

        <style>
            .products-container {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); /* Columnas dinámicas */
                gap: 10px;
                margin-left: 15px;
            }
        </style>
    </div>
</div>


