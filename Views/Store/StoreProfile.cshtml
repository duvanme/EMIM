@using EMIM.ViewModel
@model StoreProfileViewModel

@{
  if (User.IsInRole("Vendor"))
    {
      Layout = "~/Views/Shared/_StoreLayout.cshtml";
    }
    else
    {
      @await Html.PartialAsync("_AuthenticatedHeader")
    }
  var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
}


<main class="w-full h-full flex flex-col justify-center items-center">

  @if (!User.IsInRole("Vendor"))
  {
    @await Component.InvokeAsync("BackButton")
  }

  <section class="relative w-full max-w-4xl h-auto md:h-[350px] shadow-2xl flex flex-col md:flex-row rounded-2xl mt-8 p-4">
    <!--imagen -->
    <section class="flex items-center justify-center w-full md:w-1/2">
      <div class="store-profile-picture">
        <img src="@Url.Content(Model.Store.GetProfilePictureUrl())" alt="Foto de Perfil de @Model.Store.Name"
          class="w-[200px] h-[200px] md:w-[250px] md:h-[250px] lg:w-[350px] lg:h-[350px] rounded-full"
          onerror="this.src='@Url.Content("~/images/default-store-profile.png")'" />
      </div>
    </section>

    <!-- Sección del texto -->
    <div class="text-gray-800 text-sm font-medium px-4 py-3 flex flex-col justify-center w-full md:w-2/3">
      <!-- Botones -->
      <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-4">
        <a class="bg-blue-200 text-black font-medium text-sm px-4 py-1 rounded-full shadow-md hover:bg-blue-300 mb-2 md:mb-0">
          @Model.Products.Count productos publicados
        </a>        
      </div>

      <h1 class="font-bold text-lg text-center md:text-left">@Model.Store.Name</h1>
      <hr class="border-t border-gray-400 my-2">
      <p class="text-base text-center md:text-left">@Model.Store.Description</p>
      <hr class="border-t border-gray-400 my-2">

    </div>
    @if (User.Identity.IsAuthenticated && currentUserId == Model.Store.UserId)
    {
      <!-- enlace de edición -->
      <a class="absolute right-4 top-1/1 transform -translate-y-1/1 md:right-4" asp-controller="Store"
        asp-action="EditStore" asp-route-id="@Model.Store.Id">
        <img src="~/images/edit.png" alt="edit" class="w-6 h-6">
      </a>
    }
  </section>

  <!-- Contenedor de productos -->
  <div class="flex justify-between items-center px-4 md:px-8 lg:px-16 mt-8">
    <h1 class="font-bold text-lg text-center">Productos</h1>
    @if (User.Identity.IsAuthenticated && currentUserId == Model.Store.UserId)
    {
      <button id="redirectButton" class="group cursor-pointer outline-none hover:rotate-90 duration-300" title="Add New">
        <svg
          class="stroke-teal-500 fill-none group-hover:fill-teal-800 group-active:stroke-teal-200 group-active:fill-teal-600 group-active:duration-0 duration-300"
          viewBox="0 0 24 24" height="50px" width="50px" xmlns="http://www.w3.org/2000/svg">
          <path stroke-width="1.5"
            d="M12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22Z"></path>
          <path stroke-width="1.5" d="M8 12H16"></path>
          <path stroke-width="1.5" d="M12 16V8"></path>
        </svg>
      </button>
    }
  </div>

  <script>
    document.getElementById("redirectButton").addEventListener("click", function () {
      window.location.href = "@Url.Action("NewProduct", "Product")";
    });
  </script>

  <hr class="border-t border-gray-400 my-2 w-11/12 max-w-4xl">

  <!-- Cartas de Productos -->
  <section class="grid flex-col sm:flex-col-2 lg:flex-col-3 gap-6 p-4 max-w-6xl w-full">
    @await Component.InvokeAsync("ProductCard", new { storeId = Model.Store.Id })
  </section>
</main>