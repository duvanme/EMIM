@using EMIM.ViewModels
@model List<ProductViewModel>


@foreach (var product in Model)
{
    <div class="product-card bg-white shadow-md rounded-lg overflow-hidden w-full max-w-[280px] mx-auto p-4 flex flex-col transform transition duration-300 hover:scale-105 cursor-pointer"
    data-url="@Url.Action("ProductDisplay", "Product", new { id = product.Id })">


        <img src="@product.ImageUrl" alt="@product.Name" class="w-[200px] h-[200px] object-cover mx-auto" />
        <h3 class="text-lg font-semibold text-center mt-2">@product.Name</h3>
        <p class="text-gray-600 text-center mt-1"><strong>Precio:</strong> @product.Price.ToString("C")</p>

        <div class="mt-auto flex justify-between items-center">
            <button class="like-button" data-id="@product.Id">
                <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24"
                    class="w-5 h-5 text-blue-200 fill-current">
                    <path
                        d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" />
                </svg>
            </button>

            <a href="@Url.Action("EditProduct", "Product", new { id = product.Id })"
                class="edit-button flex justify-center items-center">
                <img src="~/images/edit.png" alt="edit" class="w-6 h-6">
            </a>
        </div>
    
    </div>
}


<style>
    .card {
        display: block;
        background: white;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

    .card:hover {
        transform: scale(1.05);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
    }
</style>

<script src="~/js/heartToggle.js"></script>
<script src="~/js/cardClick.js"></script>